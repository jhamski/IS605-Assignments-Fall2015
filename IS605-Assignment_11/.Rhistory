install.packages("quantmod")
getSymbols("DEXJPUS",src="FRED")
library(quantmod)
getSymbols("DEXJPUS",src="FRED")
plot(DEXJPUS
)
install.packages("devtools") # if not installed
devtools::install_github("tesseradata/datadr")
devtools::install_github("tesseradata/trelliscope")
getSymbols("PAYEMS",src="FRED")
plot(PAYEMS)
getSymbols("UNRATENSA",src="FRED")
plot(UNRATENSA)
getSymbols("UNRATENSA",src="FRED")
getSymbols("NROU",src="FRED")
plot(NROU)
getSymbols("NROU",src="FRED")
getSymbols("UNRATENSA",src="FRED")
plot(UNRATENSA)
getSymbols("LES1252881600Q",src="FRED")
?merge
str(NROU)
test <- merge(NROU, UNRATENSA)
str(test)
test
str(test)
t <- as.data.frame(test)
str(t)
plot(t)
t<-as.data.frame(NROU)
str(t)
plot(t)
str(NROU)
NROU$Data
NROU
NROU$NROU
str(NROU$NROU)
str(NROU$data)
str(NROU$Data)
ticker <- "^VIX" ## VIX index
getSymbols(ticker)
chartSeries(VIX)
vix.returns <- allReturns(VIX)
vix.returns.df <- data.frame(date=time(vix.returns),coredata(vix.returns$daily))
?allReturns
str(vix.returns)
str(NROU)
str(NROU$NROU)
NROU.df <- data.frame(date=time(NROU),coredata(NROU$NROU))
str(NROU.df)
NROU.df <- data.frame(date=time(NROU),coredata(NROU))
str(NROU.df)
return.df <-function(data){return(data.frame(date=time(data),coredata(data)))}
NROU.df <-return.df(NROU)
UNRATENSA.df <- return.df(UNRATENSA)
LES1252881600Q.df <- return.df(LES1252881600Q)
str(LES1252881600Q.df)
?merge
test <- merge(NROU.df, UNRATENSA.df, by="date")
str(test)
plot(test)
econ.data <- merge(LES1252881600Q.df, econ.data, by="date")
econ.data <- merge(NROU.df, UNRATENSA.df, by="date")
econ.data <- merge(LES1252881600Q.df, econ.data, by="date")
plot(econ.data)
plot(NROU.df)
plot(UNRATENSA.df)
plot(LES1252881600Q.df)
data.series.names <-c("Date", "UnemploymentRate", "NaturalUnempRateLongterm", "MedianWeeklyRealEarnings")
?col.names
str(econ.data)
colnames(econ.data) <- data.series.names
str(econ.data)
conn <- vdbConn("vdb", name = "trellifred")
library(quantmod)
library(datadr)
library(trelliscope)
conn <- vdbConn("vdb", name = "trellifred")
?"matrix"
0.5,0,0.25,0)
row.1 <- c(0,0,0.25,0,0,0)
row.2 <- c(0.5,0,0.25,0,0,0)
row.3 <- c(0.5,1,0,0,0,0.5)
row.4 <- c(0,0,0,0,0.5,0.5)
row.5 <- c(0,0,0.25,0.5,0,0)
row.6 <- c(0,0,0.25,0.5,0.5,0)
A <-rbind(row.1, row.2, row.3, row.4, row.5, row.6)
str(A)
A <-as.matrix(rbind(row.1, row.2, row.3, row.4, row.5, row.6))
A
str(A)
t(A)
install.packages("igraph")
B <- 0.85*A + 0.15/6
B
B[1]
B[1,]
sum(B[1,])
sum(B[2,])
B <- 0.85%*%A + 0.15/6
B
sum(B[,2])
B[,2]
B
B$row.1
B[row.1]
B[1]
B[1,]
B
B[1,]
A
rep(0.167, 6)
r <- rep(0.167, 6)
r %*% A
r %*% B
r %*% B
B %*% r
r.1 <- B %*% r
r.2 <- B %*% r.1
r.3 <- B %*% r.2
r.3
r.2
?rapply()
n <- 10
for(1:10){
print(i)
}
?for
)
?for()
??for
asdf
for(i in 1:10){
print(i)
}
for(i in 1:n){
print(i)
}
n <- 10
for(i in 1:n){
r.new <- B %*% r.old
print(r.new)
r.old <-r.new
}
n <- 10
r.old <- r
for(i in 1:n){
r.new <- B %*% r.old
print(r.new)
r.old <-r.new
}
n <- 10
r.old <- r
PageRanks <- matrix(r, nrow = 6, ncol = 1)
for(i in 1:n){
r.new <- B %*% r.old
PageRanks <-cbind(PageRanks, r.new)
r.old <-r.new
}
PageRanks
require(ggplot2)
PageRanks.check <-t(PageRanks)
PageRanks.check <-t(PageRanks)
PageRanks.check <- as.data.frame(PageRanks.check)
ggplot(PageRanks.check, aes(x=as.numeric(variable), y=value, colour=user)) + geom_line()
str(PageRanks.check)
ggplot(PageRanks.check, aes(x=as.numeric(variable), colour=user)) + geom_line()
ggplot(PageRanks.check) + geom_line()
qplot(PageRanks.check)
str(PageRanks.check)
PageRanks.check
plot(PageRanks.check)
install.packages("reshape2")
require(reshape2)
rows <- c(1,2,3,4,5,6)
PageRanks.plot <- cbind(rows, PageRanks)
PageRanks.plot
?gl
gl(1,6)
user <- gl(3, 1)
Meas1 <- c(0.7, 0.3, 0.3)
Meas2 <- c(0.7, 0.3, 0.3)
Meas3 <- c(0.2, 0.4, 0.4)
group <- c(3, 2, 2)
df <- data.frame(user=user, Meas1=Meas1, Meas2=Meas2, Meas3=Meas3, group=group)
#'melt' the data frame into long format
dfm <- melt(df, id.vars=c("user", "group"))
ggplot(dfm, aes(x=as.numeric(variable), y=value, colour=user)) + geom_line()
require(ggplot2)
require(reshape2)
user <- gl(3, 1)
Meas1 <- c(0.7, 0.3, 0.3)
Meas2 <- c(0.7, 0.3, 0.3)
Meas3 <- c(0.2, 0.4, 0.4)
group <- c(3, 2, 2)
df <- data.frame(user=user, Meas1=Meas1, Meas2=Meas2, Meas3=Meas3, group=group)
#'melt' the data frame into long format
dfm <- melt(df, id.vars=c("user", "group"))
ggplot(dfm, aes(x=as.numeric(variable), y=value, colour=user)) + geom_line()
df
?melt
PageRanks.plot <- melt(PageRanks.plot)
PageRanks.plot
dfm
PageRanks.plot
rows <- c(1,2,3,4,5,6)
PageRanks.plot <- cbind(rows, PageRanks)
PageRanks.plot
PageRanks.plot <- melt(PageRanks.plot, id.vars = "rows")
PageRanks.plot
ggplot(dfm, aes(x=1:10, y=value, colour=Var2)) + geom_line()
ggplot(PageRanks.plot, aes(x=1:10, y=value, colour=Var2)) + geom_line()
PageRanks.plot
ggplot(dfm, aes(x=Var1, y=value, colour=Var2)) + geom_line()
ggplot(PageRanks.plot, aes(x=Var1, y=value, colour=Var2)) + geom_line()
ggplot(PageRanks.plot, aes(x=Var1, y=value, colour=Var1)) + geom_line()
PageRanks
PageRanks.plot <- rbind(iter, PageRanks.plot)
iter <- c(1,2,3,4,5,6,7,8,9,10,11)
PageRanks.plot <- rbind(iter, PageRanks.plot)
PageRanks.plot
rows <- c(1,2,3,4,5,6)
PageRanks.plot <- cbind(rows, PageRanks)
iter <- c(1,2,3,4,5,6,7,8,9,10,11)
PageRanks.plot <- rbind(iter, PageRanks.plot)
rows <- c(1,2,3,4,5,6)
PageRanks.plot <- cbind(rows, PageRanks)
str(PageRanks.plot)
PageRanks.plot
len(PageRanks.plot)
length(PageRanks.plot)
length(PageRanks.plot[,1])
length(PageRanks.plot[1,])
iter <- c(0,1,2,3,4,5,6,7,8,9,10,11)
PageRanks.plot <- rbind(iter, PageRanks.plot)
PageRanks.plot
PageRanks.plot <- melt(PageRanks.plot, id.vars = "rows")
PageRanks.plot
rows <- c(1,2,3,4,5,6)
PageRanks.plot <- cbind(rows, PageRanks)
iter <- c(0,1,2,3,4,5,6,7,8,9,10,11)
PageRanks.plot <- rbind(iter, PageRanks.plot)
PageRanks.plot
PageRanks.plot <- melt(PageRanks.plot, id.vars = c("rows","iter")
)
PageRanks.plot
?melt
rows <- c(1,2,3,4,5,6)
PageRanks.plot <- cbind(rows, PageRanks)
iter <- c(0,1,2,3,4,5,6,7,8,9,10,11)
PageRanks.plot <- rbind(iter, PageRanks.plot)
str(PageRanks.plot)
PageRanks.plot
PageRanks.plot <- melt(PageRanks.plot, id.vars = "iter")
PageRanks.plot
iter <- c(0,1,2,3,4,5,6,7,8,9,10,11)
PageRanks.plot <- rbind(iter, PageRanks)
iter <- c(1,2,3,4,5,6,7,8,9,10,11)
PageRanks.plot <- rbind(iter, PageRanks)
PageRanks.plot <- melt(PageRanks.plot, id.vars = "iter")
PageRanks.plot
ggplot(PageRanks.plot, aes(x=Var2, y=value, colour=Var1)) + geom_line()
?melt
PageRanks.plot <- melt(PageRanks.plot, id.vars = 1)
ggplot(PageRanks.plot, aes(x=Var2, y=value, colour=Var1)) + geom_line()
PageRanks.plot
PageRanks.plot <- melt(PageRanks.plot, id.vars = "iter")
iter <- c(1,2,3,4,5,6,7,8,9,10,11)
PageRanks.plot <- rbind(iter, PageRanks)
PageRanks.plot <- melt(PageRanks.plot, id.vars = "iter")
ggplot(PageRanks.plot, aes(x=Var2, y=value, colour=Var1)) + geom_line()
PageRanks.plot
PageRanks.plot[Var1=row.1]
PageRanks.plot[Var1="row.1""]
l
''
)
''
"
PageRanks.plot[Var1="row.1"]
PageRanks.plot$Var1
PageRanks.plot$Var1==row.1
PageRanks.plot$Var1=="row.1"
iter <- c(1,2,3,4,5,6,7,8,9,10,11)
PageRanks.plot <- rbind(iter, PageRanks)
PageRanks.plot <- melt(PageRanks.plot, id.vars = "iter")
PageRanks.plot
subset(PageRanks.plot, Var1 != "iter")
PageRanks.plot <- subset(PageRanks.plot, Var1 != "iter")
ggplot(PageRanks.plot, aes(x=Var2, y=value, colour=Var1)) + geom_line()
?gl
gl(length=10)
gl(n=10, length=10)
?seq
iter <- seq(from=0, to = n, by = 1)
PageRanks.plot <- rbind(iter, PageRanks)
PageRanks.plot <- melt(PageRanks.plot, id.vars = "iter")
PageRanks.plot <- subset(PageRanks.plot, Var1 != "iter")
ggplot(PageRanks.plot, aes(x=Var2, y=value, colour=Var1)) + geom_line()
require(magrittr)
iter <- seq(from=0, to = n, by = 1)
PageRanks.plot <-
rbind(iter, PageRanks) %>%
melt(PageRanks.plot, id.vars = "iter") %>%
subset(PageRanks.plot, Var1 != "iter")
ggplot(PageRanks.plot, aes(x=Var2, y=value, colour=Var1)) + geom_line()
row.1 <- c(0,0,0.25,0,0,0)
row.2 <- c(0.5,0,0.25,0,0,0)
row.3 <- c(0.5,1,0,0,0,0.5)
row.4 <- c(0,0,0,0,0.5,0.5)
row.5 <- c(0,0,0.25,0.5,0,0)
row.6 <- c(0,0,0.25,0.5,0.5,0)
A <-as.matrix(rbind(row.1, row.2, row.3, row.4, row.5, row.6))
B <- 0.85*A + 0.15/6
#Check that the rowspace adds up to one
sum(B[,2])
r <- rep(0.167, 6)
n <- 10
r.old <- r
PageRanks <- matrix(r, nrow = 6, ncol = 1)
for(i in 1:n){
r.new <- B %*% r.old
PageRanks <-cbind(PageRanks, r.new)
r.old <-r.new
}
iter <- seq(from=0, to = n, by = 1)
PageRanks.plot <-
rbind(iter, PageRanks) %>%
melt(PageRanks.plot, id.vars = "iter") %>%
subset(PageRanks.plot, Var1 != "iter")
ggplot(PageRanks.plot, aes(x=Var2, y=value, colour=Var1)) + geom_line()
iter <- seq(from=0, to = n, by = 1)
PageRanks.plot <-
rbind(iter, PageRanks) %>%
melt(PageRanks.plot, id.vars = "iter") %>%
subset(PageRanks.plot, Var1 != "iter")
PageRanks.plot <- PageRanks %>%
rbind(iter, PageRanks) %>%
melt(PageRanks.plot, id.vars = "iter") %>%
subset(PageRanks.plot, Var1 != "iter")
PageRanks.plot <- PageRanks %>%
rbind(iter) %>%
melt(id.vars = "iter") %>%
subset(Var1 != "iter")
ggplot(PageRanks.plot, aes(x=Var2, y=value, colour=Var1)) + geom_line()
eigen(B %*% t(B))
eigen(B)
?eigen
eigen.B$values[eigen.B$values>0.9]
eigen.B <- eigen(B)
eigen.B$values[eigen.B$values>0.9]
eigen.B$values
as.numeric(eigen.B$values)
eigen.B <- eigen(B)
eigenvalues.B <- as.numeric(eigen.B$values)
eigenvalues.B >0.9
eigenvalues.B[eigenvalues.B >0.9]
eigen.B <- eigen(B)
eigenvalues.B <- as.numeric(eigen.B$values)
eigenvalues.B[eigenvalues.B >0.99]
eigen.B
eigen.B$vectors
PageRanks
PageRank.stable <- PageRanks[,11]
PageRank.stable
eigen.B$vectors
(1 / sum(eigen(B)$vectors[,1])) * eigen(B)$vectors[,1])
(1 / sum(eigen(B)$vectors[,1])) * eigen(B)$vectors[,1]
require(i.graph)
require(igraph)
?page.rank
page.ranks(A)
page.rank(A)
web.pages <- graph.formula(p.1--+p.2, p.2+-+p.3,p.1+-+p.3, p.3--+p.5, p.3+-+p.6, p.5--+p.6,p.5+-+p.4, p.4+-+p.6)
page.rank(web.pages)
(page.ranks.igraph<-page.rank(web.pages)$vector)
all.equal(page.ranks.igraph, PageRank.stable )
str(page.ranks.igraph)
str(PageRank.stable)
?zapsmall
?all.equal
table(cbind(Page.Ranks.igraph, PageRank.stable))
web.pages <- graph.formula(p.1--+p.2, p.2+-+p.3,p.1+-+p.3, p.3--+p.5, p.3+-+p.6, p.5--+p.6,p.5+-+p.4, p.4+-+p.6)
(Page.Ranks.igraph<-page.rank(web.pages)$vector)
all.equal(Page.Ranks.igraph, PageRank.stable)
table(cbind(Page.Ranks.igraph, PageRank.stable))
Page.Ranks.igraph
Page.Ranks.stable
PageRanks.stable
PageRank.stable
cbind(Page.Ranks.igraph, PageRank.stable)
adjusted.eigenvector<-(1 / sum(eigen.B$vectors[,1])) * eigen.B$vectors[,1]
sum(adjusted.eigenvector)
adjusted.eigenvector[adjusted.eigenvector<0]
adjusted.eigenvector
adjusted.eigenvector<-as.numeric((1 / sum(eigen.B$vectors[,1])) * eigen.B$vectors[,1])
# Any negative?
adjusted.eigenvector[adjusted.eigenvector<0]
sum(adjusted.eigenvector)
adjusted.eigenvector<0
all.equal(adjusted.eigenvector, PageRank.stable)
adjusted.eigenvector
PageRank.stable
PageRank.stable
adjusted.eigenvector
A
sum(B[,4])
age <- c(18, 23, 25, 35, 65, 54, 34, 56, 72, 19, 23, 42, 18, 39, 37)
maxHR <- c(202, 186, 187, 180, 156, 169, 174, 172, 153, 199, 193, 174, 198, 183, 178)
HR.data <- as.data.frame(cbind(age, maxHR))
plot(HR.data)
require(ggplot2)
str(HR.data)
ggplot(data = HR.data, aes(x = age, y = maxHR)) +geom_point() + geom_smooth(method="lm", color="red", linetype=2) + geom_rug() + ggtitle("Scatterplot")
ggplot(data = HR.data, aes(x = age, y = maxHR)) +geom_point() + JHT()+ geom_smooth(method="lm", color="red", linetype=2) + geom_rug() + ggtitle("Scatterplot")
JHT <-function(){
color.plot.area = "ivory"
color.background = "white"
color.grid.major = "black"
color.axis.text = "gray29"
color.axis.title = "gray29"
color.title = "gray29"
theme_bw(base_size=9) +
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank()) +
theme(plot.title=element_text(color=color.title, size=10)) +
theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
theme(axis.text.y=element_text(size=12,color=color.axis.text)) +
theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
ggplot(data = HR.data, aes(x = age, y = maxHR)) +geom_point() + JHT()+ geom_smooth(method="lm", color="red", linetype=2) + geom_rug() + ggtitle("Scatterplot")
?lm
HR.model <- lm(age ~ maxHR)
HR.model
HR.model <- lm(maxHR ~ age)
HR.model
summary(HR.model)
HR.model <- lm(maxHR ~ age, data = HR.data)
summary(HR.model)
plot(HR.model)
HR.model
summary(HR.model)
0.05 > 3.848e-08
str(cars)
col.names = c("displacement", "horsepower", "weight", "acceleration", "mpg")
cars <- read_csv(file="auto-mpg.csv", col_names=col.names)
require(readr)
col.names = c("displacement", "horsepower", "weight", "acceleration", "mpg")
cars <- read_csv(file="auto-mpg.csv", col_names=col.names)
setwd("~/Documents/Graduate School/IS 605 - Computational Mathematics/IS605-Assignments/IS605-Assignment_11")
col.names = c("displacement", "horsepower", "weight", "acceleration", "mpg")
cars <- read_csv(file="auto-mpg.csv", col_names=col.names)
str(cars)
(cars.model <- lm(mpg ~ displacement, horesepower, weight, acceleration, data = cars))
(cars.model <- lm(mpg ~ displacement, horsepower, weight, acceleration, data = cars))
(cars.model <- lm(mpg ~ displacement, horsepower, weight, acceleration, data = cars))
str(cars)
?lm
(cars.model <- lm(mpg ~ displacement + horsepower + weight + acceleration, data = cars))
car.sample <- cars[sample(nrow(cars), 40), ]
str(car.sample)
(cars.sample.model <- lm(mpg ~ displacement + horsepower + weight + acceleration, data = cars.sample))
cars.sample <- cars[sample(nrow(cars), 40), ]
(cars.sample.model <- lm(mpg ~ displacement + horsepower + weight + acceleration, data = cars.sample))
coefficients(cars.sample.model)
coefficients(cars.sample.model)$horsepower
coefficients(cars.sample.model)[1]
coefficients(cars.sample.model)[2]
coefficients(cars.sample.model)[3]
summary(cars.sample.model)
coefficients(cars.sample.model)
summary(cars.sample.model)$Coefficients
summary(cars.sample.model)
str(summary(cars.sample.model))
summary(cars.sample.model)$coefficients
summary(cars.sample.model)$r.squared
summary(cars.sample.model)
coefficients(cars.sample.model)
str(summary(cars.sample.model))
anova(cars.sample.model)
summary(cars.sample.model)
summary(cars.sample.model)$coefficients
summary(cars.sample.model)$coefficients[4]
summary(cars.sample.model)$coefficients[,4]
summary(cars.sample.model)$coefficients[4,]
str(summary(cars.sample.model)$coefficients)
summary(cars.sample.model)$coefficients[4,]
summary(cars.sample.model)$coefficients[1]
summary(cars.sample.model)$coefficients[,1]
summary(cars.sample.model)$coefficients[1,]
summary(cars.sample.model)$coefficients[,4]
summary(cars.sample.model)$coefficients[,5]
summary(cars.sample.model)$coefficients[,4]
summary(cars.sample.model)$coefficients
summary(cars.sample.model)$coefficients[,4] < 0.05
summary(cars.sample.model)$coefficients[2:5,4] < 0.05
lm.results <-as.data.frame(cbind(
summary(cars.model)$coefficients[2:5,4], summary(cars.model)$coefficients[2:5,4] < 0.05, summary(cars.model)$coefficients[2:5,2]
))
lm.results
table.cols <- c("Sample Significance Values", "Sample Variable Significance", "Sample Standard Errors", "Full Dataset Significance Values", "Full Dataset Variable Signficance", "Full Dataset Standard Errors")
summary(cars.sample.model)$coefficients[2:5,4], summary(cars.sample.model)$coefficients[2:5,4] < 0.05, summary(cars.sample.model)$coefficients[2:5,2],
lm.results <-as.data.frame(cbind(summary(cars.sample.model)$coefficients[2:5,4], summary(cars.sample.model)$coefficients[2:5,4] < 0.05, summary(cars.sample.model)$coefficients[2:5,2], summary(cars.model)$coefficients[2:5,4], summary(cars.model)$coefficients[2:5,4] < 0.05, summary(cars.model)$coefficients[2:5,2]
))
colnames(lm.results)<-table.cols
?kable

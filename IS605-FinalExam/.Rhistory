Y <- sample(1:100, 66, replace = TRUE)
X <- 1:66
DF <-cbind(X, Y)
DF
plot(DF)
?sample
library(datasets)
install.packages("ggplot2")
str(faithful)
plot(faithful)
#Jim's House Theme
JHT <-function(){
color.plot.area = "ivory"
color.background = "white"
color.grid.major = "black"
color.axis.text = "gray29"
color.axis.title = "gray29"
color.title = "gray29"
theme_bw(base_size=9) +
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank()) +
theme(plot.title=element_text(color=color.title, size=10)) +
theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
theme(axis.text.y=element_text(size=12,color=color.axis.text)) +
theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
scatter.plot<- function(data){
ggplot(data = data, aes(x = x, y = y)) +geom_point() +JHT() + geom_smooth(method="lm", color="red", linetype=2) + geom_rug() + ggtitle("Scatterplot")
}
scatter.plot(faithful)
library(ggplot2)
scatter.plot(faithful)
str(faithful)
ggplot(data = faithful, aes(x = waiting, y = eruptions)) +geom_point() +JHT() + geom_smooth(method="lm", color="red", linetype=2) + geom_rug() + ggtitle("Scatterplot")
#Jim's House Theme
JHT <-function(){
color.plot.area = "ivory"
color.background = "white"
color.grid.major = "black"
color.axis.text = "gray29"
color.axis.title = "gray29"
color.title = "gray29"
theme_bw(base_size=9) +
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank()) +
#theme(plot.title=element_text(color=color.title, size=10)) +
theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
theme(axis.text.y=element_text(size=12,color=color.axis.text)) +
#theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
#theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
JHT <-function(){
color.plot.area = "ivory"
color.background = "white"
color.grid.major = "black"
color.axis.text = "gray29"
color.axis.title = "gray29"
color.title = "gray29"
theme_bw(base_size=9) +
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank()) +
#theme(plot.title=element_text(color=color.title, size=10)) +
theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
theme(axis.text.y=element_text(size=12,color=color.axis.text))
#theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
#theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
ggplot(data = faithful, aes(x = waiting, y = eruptions)) +geom_point() +JHT() + geom_smooth(method="lm", color="red", linetype=2) + geom_rug() + ggtitle("Scatterplot")
#Jim's House Theme
JHT <-function(){
color.plot.area = "ivory"
color.background = "white"
color.grid.major = "black"
color.axis.text = "white"
color.axis.title = "gray29"
color.title = "gray29"
theme_bw(base_size=9) +
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank())
#theme(plot.title=element_text(color=color.title, size=10)) +
#theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
#theme(axis.text.y=element_text(size=12,color=color.axis.text))
#theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
#theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
ggplot(data = faithful, aes(x = waiting, y = eruptions)) +geom_point() +JHT() + geom_smooth(method="lm", color="red", linetype=2) + geom_rug() + ggtitle("Scatterplot")
library(datasets)
library(ggplot2)
#Jim's House Theme
JHT <-function(){
color.plot.area = "ivory"
color.background = "white"
color.grid.major = "black"
color.axis.text = "gray29"
color.axis.title = "gray29"
color.title = "gray29"
theme_bw(base_size=9) +
theme(panel.background=element_rect(fill=color.plot.area, color=color.plot.area)) +
theme(plot.background=element_rect(fill=color.background, color=color.background)) +
theme(panel.border=element_rect(color="gray20", size = 0.15)) +
theme(panel.grid.major=element_line(color=color.grid.major,size=.25,
linetype = "longdash")) +
theme(axis.line = element_line(color=color.grid.major, size = .5))+
theme(panel.grid.minor=element_blank())
#theme(plot.title=element_text(color=color.title, size=10)) +
#theme(axis.text.x=element_text(size=12,color=color.axis.text)) +
#theme(axis.text.y=element_text(size=12,color=color.axis.text))
#theme(axis.title.x=element_text(size=14,color=color.axis.title, face = "bold")) +
#theme(axis.title.y=element_text(size=14,color=color.axis.title, face = "bold"))
}
scatter.plot<- function(data){
ggplot(data = data, aes(x = x, y = y)) +geom_point() +JHT() + geom_smooth(method="lm", color="red", linetype=2) + geom_rug() + ggtitle("Scatterplot")
}
ggplot(data = faithful, aes(x = waiting, y = eruptions)) +geom_point() +JHT() + geom_smooth(method="lm", color="red", linetype=2) + geom_rug() + ggtitle("Scatterplot")
c(1,2,3)
?matrix
m <- matrix(c(1,-1,3,-5,2,1,5,-9,6,-2,4), nrow=3, ncol=4)
m <- matrix(c(1,-1,3,-5,2,1,5,-9,6,-1,-2,4), nrow=3, ncol=4)
m
install.packages("matrix")
install.packages("Matrix")
rankMatrix(m)
require(Matrix)
rankMatrix(m)
t(A)
t(m)
m
m <- matrix(c(1,-1,3,-5,2,1,5,-9,6,-1,-2,4), nrow=3, ncol=4, byrow=T)
m
rankMatrix(m)
t(m)
samples.builtin <- rbinom(20,100,0.25)
samples.builtin
?rbinom
dbinom(0:20, 100, 0.25)
binom <- function(int){
prob<-choose(20, int)*(0.25^int)*(0.75^(20-int))
return(prob)
}
binom(1)
binom(2)
binom(21)
binom(20)
?seq
integers <- seq(from=0, to=20, by=1)
integers
binom <- function(int){
prob<-choose(20, int)*(0.25^int)*(0.75^(20-int))
return(prob)
}
integers <- seq(from=0, to=20, by=1)
binom.freq <- apply(integers, FUN=binom)
binom.freq <- lapply(integers, FUN=binom)
binom.freq
?apply
binom.freq <- sapply(integers, FUN=binom)
binom.freq
hist(binom.freq)
hist(binom.freq, bin=1)
?hist
hist(binom.freq, freq=True)
hist(binom.freq, freq=T)
?hist
hist(binom.freq, breaks=20,freq=T)
plot(binom.freq)
binom.freq
install.packages("reader")
file='auto-mpg.data'
auto=read_delim(file, delim=',')
require(readr)
install.packages("readr")
require(readr)
file='auto-mpg.data'
auto=read_delim(file, delim=',')
setwd("~/Documents/Personal/IS605-Assignments-Fall2015/IS605-FinalExam")
file='auto-mpg.data'
auto=read_delim(file, delim=',')
auto
str(auto)
auto=read_delim(file, delim=',', header=F)
auto=read_delim(file, delim=',', col_names=F)
str(auto)
summary(auto)
auto
auto <- as.data.frame(auto)
str(auto)
auto <- read_csv(file, col_names = F)
file='auto-mpg.csv'
auto <- read_csv(file, col_names = F)
str(auto)
auto
#note I opted to open the data in Excel and save with commas as delineators.
col.names = c("displacement", "horsepower", "weight", "acceleration", "mpg")
cars <- read_csv(file="auto-mpg.csv", col_names=col.names)
col.names = c("displacement", "horsepower", "weight", "acceleration", "mpg")
auto <- read_csv(file="auto-mpg.csv", col_names=col.names)
auto
str(auto)
svd(auto)
pc <- prcomp(auto)
pc
names(pc)
?prcomp
pc <- prcomp(auto, center=T)
print(pc)
plot(pc)
plot(pc$x)
?prcomp

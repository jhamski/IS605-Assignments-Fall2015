v <- c(1, 4, -3)
print(v*4)
(v*4)
(3*v-2*w)
w <- c(-2, 5, 7)
(3*v-2*w)
?%*%
w%*%v
w*v
-2+20+-21
u = c(0.5, 0.5)
v = c(3, -4)
u%*%v
(sqrt(u%*%u))
(sqrt(v%*%v))
vec.angle<-function(v,w){
theta <- (v%*%w) / ((v%*%v)*(w%*%w))
return theta
}
vec.angle<-function(v,w){
theta <- (v%*%w) / ((v%*%v)*(w%*%w))
return(theta)
}
theta <- vec.angle(u,v)
theta <- vec.angle(u,v)
ang <- cos(theta)
(ang <- cos(theta))
cos(90)
?cos
acos(90)
vec.angle<-function(v,w){
theta <- (v%*%w) / ((v%*%v)*(w%*%w))
return(theta)
}
theta <- vec.angle(u,v)
(ang <- acos(theta))
?acos
?norm
v%*%v
norm(v)
norm(v, type="2")
vec.angle<-function(v,w){
norm.v <-sqrt((v%*%v))
norm.w <-sqrt((w%*%w))
theta <- (v%*%w) / (norm.v*norm.w)
return(theta)
}
theta <- vec.angle(u,v)
theta
(ang <- acos(theta))
-cos(90)
cos(90)
?cos
cos(90*pi/180)
cos(120*pi/180)
cos(90*pi/180)
vec.angle<-function(v,w){
norm.v <-sqrt((v%*%v))
norm.w <-sqrt((w%*%w))
theta <- (v%*%w) / (norm.v*norm.w)
return(theta)
}
theta <- vec.angle(u,v)
(ang <- acos(theta))
ang*180/pi
(3*u-2*v)
u
3*u
v
2*v
3*u-2*v
setwd("~/Documents/Graduate School/IS 605 - Computational Mathematics/Assignment_1")
rref <- function(m) {
pivot <- 1
norow <- nrow(m)
nocolumn <- ncol(m)
for(r in 1:norow) {
if ( nocolumn <= pivot ) break;
i <- r
while( m[i,pivot] == 0 ) {
i <- i + 1
if ( norow == i ) {
i <- r
pivot <- pivot + 1
if ( nocolumn == pivot ) return(m)
}
}
trow <- m[i, ]
m[i, ] <- m[r, ]
m[r, ] <- trow
m[r, ] <- m[r, ] / m[r, pivot]
for(i in 1:norow) {
if ( i != r )
m[i, ] <- m[i, ] - m[r, ] * m[i, pivot]
}
pivot <- pivot + 1
}
return(m)
}
m <- matrix(c(1, 2, -1, -4,
2, 3, -1, -11,
-2, 0, -3, 22), 3, 4, byrow=TRUE)
print(m)
print(rref(m))
m <- matrix(c(1, 1, 3, 1,
2, -1, 5, 2,
-1, -2, 4, 6), 3, 4, byrow=TRUE)
m
print(m)
print(rref(m))
m <- matrix(c(2, 2, 2, 2,
1, 1, 1, 1,
4, 4, 4, 4), 3, 4, byrow=TRUE)
m[1,]
m <- matrix(c(2, 2, 2, 2,
1, 1, 1, 1,
4, 4, 4, 4), 3, 4, byrow=TRUE)
subtract.row <- function(m, row){
m[n,] <- m[n+1,]-m[n,]
return(m)
}
subtract.row(m,2)
subtract.row <- function(m, row){
m[n,] <- m[row+1,]-m[row,]
return(m)
}
subtract.row(m,2)
subtract.row <- function(m, row){
m[row,] <- m[row+1,]-m[row,]
return(m)
}
subtract.row(m,2)
m <- matrix(c(2, 2, 2, 2,
1, 1, 1, 1,
4, 4, 4, 4), 3, 4, byrow=TRUE)
subtract.row <- function(m, row){
m[row,] <- m[row-1,]-m[row,]
return(m)
}
subtract.row(m,2)
m <- matrix(c(2, 2, 2, 2,
1, 1, 1, 1,
4, 4, 4, 4), 3, 4, byrow=TRUE)
subtract.row <- function(m, row){
m[row,] <- m[row-1,]-m[row,]
return(m)
}
subtract.row(m,2)
m <- matrix(c(2, 2, 2, 2,
1, 7, 1, 1,
4, 4, 4, 4), 3, 4, byrow=TRUE)
subtract.row <- function(m, row){
m[row,] <- m[row-1,]-m[row,]
return(m)
}
subtract.row(m,2)
2%1
2%%1
2%%1.5
3%%2
vec.angle<-function(v,w){
norm.v <-sqrt((v%*%v))
norm.w <-sqrt((w%*%w))
theta <- (v%*%w) / (norm.v*norm.w)
return(theta)
}
(theta <- acos(vec.angle(u,v)))
u = c(0.5, 0.5)
v = c(3, -4)
(theta <- acos(vec.angle(u,v)))
vec.angle<-function(v,w){
norm.v <-sqrt((v%*%v))
norm.w <-sqrt((w%*%w))
theta <- (v%*%w) / (norm.v*norm.w)
theta <- acos(theta)
return(theta)
}
(theta <- vec.angle(u,v))
u = c(2, 1)
v = c(1, 2)
vec.angle<-function(v,w){
norm.v <-sqrt((v%*%v))
norm.w <-sqrt((w%*%w))
theta <- (v%*%w) / (norm.v*norm.w)
theta <- acos(theta)
return(theta)
}
(theta <- vec.angle(u,v))
u = c(0.5, 0.5)
v = c(3, -4)
u = c(0.5, 0.5)
v = c(3, -4)
vec.angle<-function(v,w){
norm.v <-sqrt((v%*%v))
norm.w <-sqrt((w%*%w))
theta <- (v%*%w) / (norm.v*norm.w)
theta <- acos(theta)
return(theta)
(theta <- vec.angle(u,v))
afd
)
vec.angle<-function(v,w){
norm.v <-sqrt((v%*%v))
norm.w <-sqrt((w%*%w))
theta <- (v%*%w) / (norm.v*norm.w)
theta <- acos(theta)
return(theta)
}
(theta <- vec.angle(u,v))
(deg <- theta*180/pi)
m <- matrix(c(1, 1, 3, 1,
2, -1, 5, 2,
-1, -2, 4, 6), 3, 4, byrow=TRUE)
test <- matrix(c(1, 1, 3, 1,
2, -1, 5, 2,
-1, -2, 4, 6), 3, 4, byrow=TRUE)
print(test)
print(rref(test))
v <- c(9,8,3)
v <- c(9,8,3)
m <- matrix(c(1, 2, 3,
2, -1, 1,
3, 0, -1), 3, 3, byrow=TRUE)
m
v
m+v
v <- matrix(c(9,8,3), 1,3, byrow=TRUE)
v
v <- matrix(c(9,8,3), 3,1, byrow=TRUE)
v
m <- cbind(m.input, v.input)
v.input <- matrix(c(9,8,3), 3,1, byrow=TRUE)
m.input <- matrix(c(1, 2, 3,
2, -1, 1,
3, 0, -1), 3, 3, byrow=TRUE)
m <- cbind(m.input, v.input)
m
interch.row<-function(m, rw1, rw1){
m.copy<-m
m[rw1,]<-m.copy[rw2,]
m[rw2,]<-m.copy[rw1,]
return(m)
}
interch.row<-function(m, rw1, rw2){
m.copy<-m
m[rw1,]<-m.copy[rw2,]
m[rw2,]<-m.copy[rw1,]
return(m)
}
m
interch.row(m, 1, 2)
m[1,1]
m
m[1+1,1+1]
m[1+1,1]
mult.row<-function(m,rw.scale,row.elim){
scalar = m[row.elim,row.elim-1]
#m = m[row.scale,]*scalar
return(scalar)
}
mult.row(m,1,2)
mult.row(m,1,3)
mult.row(m,1,2)
mult.row(m,1,1)
mult.row(m,1,3)
m
mult.row<-function(m, rw.scale, rw.elim){
scalar = m[row.elim,row.elim]
#m = m[row.scale,]*scalar
return(scalar)
}
mult.row(m,1,3)
mult.row<-function(m, rw.scale, rw.elim){
scalar = m[rw.elim,rw.elim]
#m = m[row.scale,]*scalar
return(scalar)
}
mult.row(m,1,3)
m
mult.row<-function(m, rw.scale, rw.elim, col.elim){
scalar = m[rw.elim,col.elim]
#m = m[row.scale,]*scalar
return(scalar)
}
mult.row(m,1,3)
mult.row(m,1,3,1)
mult.row<-function(m, rw.scale, rw.elim, col.elim){
scalar <- m[rw.elim,col.elim]
m <- m[row.scale,]*scalar
return(m)
}
mult.row(m,1,3,1)
mult.row<-function(m, rw.scale, rw.elim, col.elim){
scalar <- m[rw.elim,col.elim]
m <- m[rw.scale,]*scalar
return(m)
}
mult.row(m,1,3,1)
mult.row<-function(m, rw.scale, rw.elim, col.elim){
scalar <- m[rw.elim,col.elim]
m[rw.scale] <- m[rw.scale,]*scalar
return(m)
}
v.input <- matrix(c(9,8,3), 3,1, byrow=TRUE)
m.input <- matrix(c(1, 2, 3,
2, -1, 1,
3, 0, -1), 3, 3, byrow=TRUE)
m <- cbind(m.input, v.input)
#multiply row by the proper scalar
mult.row<-function(m, rw.scale, rw.elim, col.elim){
scalar <- m[rw.elim,col.elim]
m[rw.scale] <- m[rw.scale,]*scalar
return(m)
}
mult.row(m,1,3,1)
mult.row<-function(m, rw.scale, rw.elim, col.elim){
scalar <- m[rw.elim,col.elim]
m[rw.scale,] <- m[rw.scale,]*scalar
return(m)
}
m
mult.row(m,1,3,1)
subtract.row <- function(m, row){
m[row,] <- m[row-2,]-m[row,]
return(m)
}
subtract.row(m,3)
